{"version":3,"sources":["components/StickyTop/index.jsx","components/Jumbotron/index.jsx","components/GameCard/index.jsx","components/Footer/index.jsx","App.js","index.js"],"names":["StickyTop","props","react_default","a","createElement","className","style","fontWeight","guessedMessage","score","topScore","Jumbotron","GameCard","state","_this2","this","alt","name","src","image","data-id","id","onClick","userClick","Component","Footer","App","chars","userPick","handleClickScore","newUserPick","Object","toConsumableArray","_this","push","sort","b","Math","random","indexOf","setState","max","components_StickyTop","components_Jumbotron","map","char","components_GameCard","key","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"8yDAqBeA,MAlBf,SAAmBC,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEC,WAAY,MAAzB,gBAEFL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAKH,EAAMO,iBAEbN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,oBACUH,EAAMQ,MADhB,iBACqCR,EAAMS,mBCGpCC,MAdf,WACE,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,gBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,+ECQOO,oNAfbC,MAAQ,2EAEC,IAAAC,EAAAC,KACP,OAEEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKY,IAAKD,KAAKd,MAAMgB,KAAMC,IAAKH,KAAKd,MAAMkB,MAAOC,UAASL,KAAKd,MAAMoB,GAAIC,QAAS,kBAAMR,EAAKb,MAAMsB,UAAUT,EAAKb,MAAMoB,gBAR5GG,2BCSRC,MATf,WACE,OACEvB,EAAAC,EAAAC,cAAA,4BAEEF,EAAAC,EAAAC,cAAA,eCiDSsB,6MAhDbb,MAAQ,CACNc,QACAlB,MAAO,EACPC,SAAU,EACVkB,SAAU,GACVpB,eAAgB,8BAGlBqB,iBAAmB,SAAAR,GACjB,IAAMS,EAAWC,OAAAC,EAAA,EAAAD,CAAOE,EAAKpB,MAAMe,UACnCE,EAAYI,KAAKb,GAEjBY,EAAKpB,MAAMc,MAAMQ,KAAK,SAAShC,EAAGiC,GAChC,MAAO,GAAMC,KAAKC,YAGqB,IAArCL,EAAKpB,MAAMe,SAASW,QAAQlB,GAC9BY,EAAKO,SAAS,CACZ/B,MAAOwB,EAAKpB,MAAMJ,MAAQ,EAC1BC,SAAU2B,KAAKI,IAAIR,EAAKpB,MAAMJ,MAAQ,EAAGwB,EAAKpB,MAAMH,UACpDkB,SAAUE,EACVtB,eAAgB,2BAGlByB,EAAKO,SAAS,CACZ/B,MAAO,EACPmB,SAAU,GACVpB,eAAgB,sGAKb,IAAAM,EAAAC,KACP,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsC,EAAD,CAAWjC,MAAOM,KAAKF,MAAMJ,MAAOD,eAAgBO,KAAKF,MAAML,eAAgBE,SAAUK,KAAKF,MAAMH,WACpGR,EAAAC,EAAAC,cAACuC,EAAD,MACAzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZU,KAAKF,MAAMc,MAAMiB,IAAI,SAAAC,GAAI,OACxB3C,EAAAC,EAAAC,cAAC0C,EAAD,CAAU7B,KAAM4B,EAAK5B,KAAME,MAAO0B,EAAK1B,MAAO4B,IAAKF,EAAKxB,GAAIA,GAAIwB,EAAKxB,GAAIE,UAAWT,EAAKe,sBAG7F3B,EAAAC,EAAAC,cAAC4C,EAAD,cA3CUxB,aCHlByB,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.44b77e35.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction StickyTop(props) {\n  return (\n    <div className=\"d-flex justify-content-around fixed-top\">\n      <div className=\"p-3\">\n        <h1 style={{ fontWeight: 1000 }}>Clicky Game</h1>\n      </div>\n      <div className=\"p-3 \">\n        <h1>{props.guessedMessage}</h1>\n      </div>\n      <div className=\"p-3 \">\n        <h1>\n          Score: {props.score} | Top Score: {props.topScore}\n        </h1>\n      </div>\n    </div>\n  );\n}\n\nexport default StickyTop;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container text-center\">\n        <br />\n        <br />\n        <br />\n        <h1 className=\"display-4\">Clicky Game!</h1>\n        <p className=\"lead\">Click on an image to earn points, but don't click on any more than once!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass GameCard extends Component {\n  state = {};\n\n  render() {\n    return (\n      // <div className=\"container\">\n      <div className=\"card float-left\">\n        <div className=\"img-container \">\n          <img alt={this.props.name} src={this.props.image} data-id={this.props.id} onClick={() => this.props.userClick(this.props.id)} />\n        </div>\n      </div>\n      // </div>\n    );\n  }\n}\n\nexport default GameCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer>\n      Click Game!\n      <span />\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport StickyTop from \"./components/StickyTop/index\";\nimport Jumbotron from \"./components/Jumbotron/index\";\nimport GameCard from \"./components/GameCard/index\";\nimport chars from \"./chars.json\";\nimport Footer from \"./components/Footer/index\";\n\nclass App extends Component {\n  state = {\n    chars,\n    score: 0,\n    topScore: 0,\n    userPick: [],\n    guessedMessage: \"Click an image to begin!\"\n  };\n\n  handleClickScore = id => {\n    const newUserPick = [...this.state.userPick];\n    newUserPick.push(id);\n\n    this.state.chars.sort(function(a, b) {\n      return 0.5 - Math.random();\n    });\n\n    if (this.state.userPick.indexOf(id) === -1) {\n      this.setState({\n        score: this.state.score + 1,\n        topScore: Math.max(this.state.score + 1, this.state.topScore),\n        userPick: newUserPick,\n        guessedMessage: \"You guessed Correctly!\"\n      });\n    } else {\n      this.setState({\n        score: 0,\n        userPick: [],\n        guessedMessage: \"You guessed Incorrectly!\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <StickyTop score={this.state.score} guessedMessage={this.state.guessedMessage} topScore={this.state.topScore} />\n        <Jumbotron />\n        <div className=\"container\">\n          {this.state.chars.map(char => (\n            <GameCard name={char.name} image={char.image} key={char.id} id={char.id} userClick={this.handleClickScore} />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}